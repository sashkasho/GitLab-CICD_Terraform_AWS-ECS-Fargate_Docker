variables:
  PROJECT_PATH: "$CI_PROJECT_DIR"  #/home/gitlab-runner/builds/yhqRUGix/0/lecture_6/online_shop_application
  #my: "/home/sasha/lecture_6/online_shop_application"
  APP_OUTPUT_PATH_FRONTEND: "$CI_PROJECT_DIR/frontend/dist/shop"
  APP_CACHE_PATH_FRONTEND: "$CI_PROJECT_DIR/frontend/node_modules"
  APP_OUTPUT_PATH_BACKEND: "$CI_PROJECT_DIR/backend/target"
  #POSTGRES_HOST: postgres
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  #- deploy0
  - build-back
  - build-front
  #- postgres
  #- docker-compose
  - deploy

services:
  #- docker:dind
  - postgres:9.4.26-alpine

build-backend-job:
  stage: build-back
  tags:
    - my-ubuntu
  script:
      - cd backend
      - mvn package
  after_script:
    - cp $PROJECT_PATH/backend/Dockerfile $APP_OUTPUT_PATH_BACKEND
  artifacts:
    paths:
      - $APP_OUTPUT_PATH_BACKEND/shop-api-0.0.1-SNAPSHOT.jar
    expire_in: 1d

build-image-backend-job:
  stage: build-back
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: sholalexandra/demo_app
    IMAGE_TAG: backend-mvn-app-$CI_COMMIT_SHA
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - cd backend
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  needs:
    - build-backend-job

build-frontend-job:
  stage: build-front
  image: node:16.18.0-alpine
  #tags:
    #- my-ubuntu
  script:
    - cd frontend
    - npm install
    - ./node_modules/.bin/ng build --prod
  after_script:
    - cp $PROJECT_PATH/frontend/Dockerfile $APP_OUTPUT_PATH_FRONTEND
  cache:
    paths:
      - $APP_CACHE_PATH_FRONTEND
  artifacts:
    paths:
      - $APP_OUTPUT_PATH_FRONTEND
    expire_in: 1d
  tags:
    - docker

build-image-frontend-job:
  stage: build-front
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: sholalexandra/demo_app
    IMAGE_TAG: frontend-npm-app-$CI_COMMIT_SHA
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - cd frontend
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  needs:
    - build-frontend-job

deploy:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    #DOCKER_HOST: tcp://docker:2376
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
    #DOCKER_HOST: tcp://192.168.1.103:2376
  #before_script:
    #- chmod 400 $SSH_KEY
  script: 
    #- apk add openssh
    #- ufw allow ssh
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    #- docker-compose port frontend 80
    - netstat -a
    - docker-compose up --build
    #- sleep 60
    #- docker-compose ps
    #- netstat -a
    #- docker-compose logs
    #- docker-compose down

  #tags:
    #- my-ubuntu
    
    #- apk add openssh
    #- ufw allow ssh
    #- ssh -o StrictHostKeyChecking=no -i $SSH_KEY sasha@192.168.1.103 "
    #    docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD &&
    #    docker-compose ps &&
    #    docker-compose up -d --build &&
    #    docker-compose ps "

    #- service docker start
    #- docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    #- docker-compose ps
    #- docker-compose up -d --build
    #- docker-compose ps
    
    #~/.ssh/app-cicd-key
